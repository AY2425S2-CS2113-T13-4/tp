/*
 * This source file was generated by the Gradle 'init' task
 */

import Characters.Players.Player;
import Equipment.Equipment;
import Events.Shop;
import Functions.Storage;
import game.Game;
import exceptions.RolladieException;
import Equipment.DragonShield;
import Equipment.FlamingSword;
import Equipment.EmptySlot;

import Functions.UI;

import java.util.ArrayList;
import java.util.List;

import static Functions.UI.readIntegerInput;

public class Rolladie {

    public static void main(String[] args) throws InterruptedException, RolladieException {
        mainMenu();
    }

    /**
     * Starts the game menu and shows options for new game or loading from save
     */
    public static void mainMenu() throws InterruptedException {
        UI.printWelcomeMessage();

        UI.printOptions();
        String userInput = UI.readInput();
        Game game;
        while(!userInput.equals("3")) {
            try {
                switch (userInput) {
                case "1":
                    game = new Game();
                    break;
                case "2":
                    int saveSlot = Integer.parseInt(UI.promptSaveFile());
                    try {
                        game = Storage.loadGame(saveSlot);
                        UI.printMessage("âœ… Game loaded from save slot " + saveSlot);
                        UI.showContinueScreen(game);
                    } catch (RolladieException e) {
                        UI.printErrorMessage(e.getMessage());
                        UI.printMessage("Starting new game instead.");
                        game = new Game();
                    }
                    break;
                default:
                    throw new RolladieException("Invalid option");
                }
                game.run();
                UI.printWelcomeMessage();
                UI.printOptions();
            } catch (RolladieException e) {
                UI.printErrorMessage(e.getMessage());
            } finally {
                userInput = UI.readInput();
            }
        }
        UI.printExitMessage();
    }
}

